C51 COMPILER V9.50a   CONTROL                                                              07/17/2017 17:31:02 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE CONTROL
OBJECT MODULE PLACED IN CONTROL.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE CONTROL.c LARGE OPTIMIZE(7,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*****************************************************************
   2                                       KEY.C  file
   3          
   4          Ö÷Òª¹¦ÄÜ£º¸ºÔð¶Ô¿ª¹ØÄ£¿é¿ª¹Ø¶¯×÷µÄÏìÓ¦£¬Çø·Ö¶Ì°´¡¢³¤°´¼°Í£Ö¹¶¯×÷²Ù
   5                    ×÷£¬ÖÃÎ»ÏàÓ¦±êÖ¾Î»
   6          
   7          ´´½¨Ê±¼ä£º2015.10.31
   8          *****************************************************************/
   9          
  10          /*--------------------------------------------------------------*/
  11          /*---------------------------Í·ÎÄ¼þ-----------------------------*/
  12          /*--------------------------------------------------------------*/
  13          #include <STC89C5xRC.h>
  14          #include "TELE_PARSE.h"
  15          #include "CONTROL.h"
  16          #include "SCR.h"
  17          #include "Sensor_T_H.h"
  18          #include "LUX_LIGHT.h"
  19          #include "CONFIG.h"
  20          /*--------------------------------------------------------------*/
  21          
  22          
  23          
  24          /*--------------------------------------------------------------*/
  25          /*-------------------------È«¾Ö±äÁ¿¶¨Òå-------------------------*/
  26          /*--------------------------------------------------------------*/
  27          bit  Key_Cheak;                                      //±êÖ¾¼ÆÊýÆ÷2µÄÓÃÍ¾£¬°´¼ü¼ì²â
  28          unsigned int Key_Counter;                            //¿ª¹Ø°´ÏÂµÄÊ±¼ä¼ÆÊýÆ÷
  29          bit  Long_Cheak;                                     //ÓÃÓÚ³¤°´Ê±¼ì²âºÏÊÊÍ£Ö¹¿ØÖÆ
  30          bit  Key_Shake;
  31          unsigned char Key_Value;
  32          bit  Key_Flag;
  33          
  34          unsigned int Delay_Count1,Delay_CountS1;
  35          unsigned int Delay_Count2,Delay_CountS2;
  36          unsigned int Delay_Count3,Delay_CountS3;
  37          unsigned int Delay_Count4,Delay_CountS4;
  38          bit Time_Up1,Time_Up2,Time_Up3,Time_Up4;                    //ÑÓÊ±Ê±¼äµ½±êÖ¾Î»
  39          
  40          /*--------------------------------------------------------------*/
  41          /*--------------------------¿ª¹Ø³õÊ¼»¯--------------------------*/
  42          /*--------------------------------------------------------------*/
  43          void init_key()
  44          {
  45   1        A0=1;                                              //A0¡¢A1¡¢A2Îª74hc148ÊäÈë¶Ë¿Ú£¬ÐèÒªÐ´Èë1
  46   1        A1=1;
  47   1        A2=1;
  48   1        Key_Cheak=0;                                       //°´¼ü¼ì²â³õÊ¼»¯ÎªÁã
  49   1        Key_Counter=0x0000;                                //¼ÆÊýÆ÷³õÊ¼»¯³ÉÁã
  50   1        Long_Cheak=0;
  51   1        Key_Shake=0;
  52   1        Key_Value=0;
  53   1        Key_Flag=0;
  54   1      
  55   1        
C51 COMPILER V9.50a   CONTROL                                                              07/17/2017 17:31:02 PAGE 2   

  56   1        T2CON=0x00;T2MOD=0x00;                             //ÉèÖÃ¶¨Ê±Æ÷2Îª16Î»×Ô¶¯ÖØ×°ÔØÄ£Ê½
  57   1        RCAP2H=0xFF;RCAP2L=0x0A;                           //ÉèÖÃ¶¨Ê±Æ÷µÄ¶¨Ê±Ê±¼äÎª100us
  58   1        TH2=0xFF;TL2=0x0A;
  59   1        TR2=1;                                             //Æô¶¯¶¨Ê±Æ÷T2
  60   1        ET2=1;                                             //ÔÊÐí¶¨Ê±Æ÷T2ÖÐ¶Ï
  61   1                                  //ÍâÖÐ¶Ï1³õÊ¼»¯
  62   1        IE0=0;                                             //¿ªÖÐ¶ÏÖ®Ç°ÏÈÇå¿ÕÒ»ÏÂÖÐ¶Ï±êÖ¾Î»
  63   1        EX0=1;                                             //ÔÊÐíÍâ²¿ÖÐ¶Ï0²úÉúÖÐ¶Ï
  64   1        IT0=1;                                             //Íâ²¿ÖÐ¶Ï0ÎªÌøÑØ´¥·¢·½Ê½
  65   1      }
  66          /*--------------------------------------------------------------*/
  67          /*-------------------------Íâ²¿ÖÐ¶Ï0³ÌÐò------------------------*/
  68          /*----------------------ÓÉÍâ²¿°´¼ü¶¯×÷´¥·¢----------------------*/
  69          /*--------------------------------------------------------------*/
  70          void interrupt_INT0() interrupt 0                    //Íâ²¿ÖÐ¶Ï0µÄÖÐ¶ÏºÅÎª0
  71          {
  72   1        Key_Cheak=1;                       //¿ªÆô°´¼ü¼ì²â---->>¶¨Ê±Æ÷2ÖÐÍê³É¼ì²âºÍ´¦Àí¹ý³Ì
  73   1        Key_Counter=0x0000;
  74   1        Key_Value=0;
  75   1        EX0=0;                                     //¹Ø±ÕÍâ²¿ÖÐ¶Ï0£¬·ÀÖ¹°´¼ü¶¶¶¯Ôì³ÉÖØ¸´²úÉúÖÐ¶Ï
  76   1        IE0=0;                                     //Îª±£ÏÕÆð¼û£¬ÔÙ´ÎÇå¿ÕÍâ²¿ÖÐ¶ÏÇëÇóÎ»
  77   1      }
  78          /*--------------------------------------------------------------*/
  79          /*--------------------------------------------------------------*/
  80          /*------------------------¶¨Ê±Æ÷2ÖÐ¶Ï³ÌÐò-----------------------*/
  81          /*--------------------------------------------------------------*/
  82          void interrupt_timer2() interrupt 5                    //¶¨Ê±Ê±¼äÎª100us
  83          {
  84   1        TF2=0;                         //Çå¿Õ¶¨Ê±Æ÷2µÄÖÐ¶ÏÇëÇó±êÖ¾Î»£¬T2µÄÖÐ¶ÏÇëÇó±êÖ¾Î»ÐèÒªÈí¼þÇåÁã
  85   1      
  86   1      
  87   1      /*-----------------------ÑÓÊ±Ìø×ª¿ØÖÆÊä³ö³ÌÐò-------------------------*/    
  88   1        if(Delay_Flag1)
  89   1        {
  90   2          Delay_Count1++;
  91   2          if(Delay_Count1==10000)       //±ê×¼1S
  92   2          {
  93   3            Delay_Count1=0;
  94   3            Delay_CountS1++;
  95   3      //      led1=~led1;
  96   3            if(Delay_CountS1>=Delay_Time1)//0x05
  97   3            {
  98   4              Delay_CountS1=0;        
  99   4              Delay_Flag1=0;
 100   4              Time_Up1=1;
 101   4            }
 102   3          }
 103   2        }
 104   1        if(Delay_Flag2)
 105   1        {
 106   2          Delay_Count2++;
 107   2          if(Delay_Count2==10000)       //±ê×¼1S
 108   2          {
 109   3            Delay_Count2=0;
 110   3            Delay_CountS2++;
 111   3      //      led1=~led1;
 112   3            if(Delay_CountS2>=Delay_Time2)//0x05
 113   3            {
 114   4              Delay_CountS2=0;        
 115   4              Delay_Flag2=0;
 116   4              Time_Up2=1;
 117   4            }
C51 COMPILER V9.50a   CONTROL                                                              07/17/2017 17:31:02 PAGE 3   

 118   3          }
 119   2        }
 120   1        if(Delay_Flag3)
 121   1        {
 122   2          Delay_Count3++;
 123   2          if(Delay_Count3==10000)       //±ê×¼1S
 124   2          {
 125   3            Delay_Count3=0;
 126   3            Delay_CountS3++;
 127   3      //      led1=~led1;
 128   3            if(Delay_CountS3>=Delay_Time3)//0x05
 129   3            {
 130   4              Delay_CountS3=0;        
 131   4              Delay_Flag3=0;
 132   4              Time_Up3=1;
 133   4            }
 134   3          }
 135   2        }
 136   1        if(Delay_Flag4)
 137   1        {
 138   2          Delay_Count4++;
 139   2          if(Delay_Count4==10000)       //±ê×¼1S
 140   2          {
 141   3            Delay_Count4=0;
 142   3            Delay_CountS4++;
 143   3      //      led1=~led1;
 144   3            if(Delay_CountS4>=Delay_Time4)//0x05
 145   3            {
 146   4              Delay_CountS4=0;        
 147   4              Delay_Flag4=0;
 148   4              Time_Up4=1;
 149   4            }
 150   3          }
 151   2        }
 152   1      /*-----------------------¿É¿Ø¹è´¥·¢¿ØÖÆÊä³ö³ÌÐò-------------------------*/  
 153   1        SCR_counter++;
 154   1        if(SCR_counter==SCR1_value)       //¿É¿Ø¹èµÄÑÓÊ±µ¼Í¨Öµ
 155   1        {
 156   2          SCR1=0;               //SCR1=P1^0;´¥·¢¿ØÖÆ¿É¿Ø¹èµ¼Í¨
 157   2          SCR1_timer=SCR1_value;        
 158   2        }
 159   1        if(SCR_counter==SCR2_value)       //¿É¿Ø¹èµÄÑÓÊ±µ¼Í¨Öµ
 160   1        {
 161   2          SCR2=0;               //SCR2=P1^1;´¥·¢¿ØÖÆ¿É¿Ø¹èµ¼Í¨
 162   2          SCR2_timer=SCR2_value;
 163   2        }
 164   1        if(SCR_counter==(SCR1_timer+SCR_TIGGER_TIME))          //Ê¹µ¼Í¨¸ßÂö³åÎ¬³Ö1ms
 165   1          SCR1=1;                       //¹Ø±Õ´¥·¢ÐÅºÅ
 166   1        if(SCR_counter==(SCR2_timer+SCR_TIGGER_TIME))
 167   1          SCR2=1;
 168   1        
 169   1      /*----------------------¿É¿Ø¹èµ÷¹â¿ØÖÆÊä³ö³ÌÐò------------------------*/  
 170   1        if(SCR1_control_flag||SCR2_control_flag)               //¿É¿Ø¹èµÄµ÷¹â¿ØÖÆ
 171   1        {
 172   2          SCR_control_counter++;                             //¿É¿Ø¹è¿ØÖÆ¼ÆÊýÆ÷¼Ó1
 173   2          if(SCR_control_counter==SCR_CHANGE_RATE)//0.1s¿É¿Ø¹èÑÓÊ±µ¼Í¨ÖµÔö¼Ó»òÕß¼õÉÙ1´Î£¬³¤°´Ê±´Ó×îÁÁµ½×î°µÐèÒª7sÖ
             -Ó
 174   2          {
 175   3            if(SCR1_control_flag)                            //¹è¿Ø¿Ú1
 176   3            {
 177   4              if(SCR1_value>SCR_TOP_THRESHOLD)             //Ñ­»·¿ØÖÆ£¬ÁÁ¶È×î°µÊ±ÔÙÖð½¥ÔöÁÁ
 178   4              {
C51 COMPILER V9.50a   CONTROL                                                              07/17/2017 17:31:02 PAGE 4   

 179   5                SCR1_status=0;
 180   5                SCR1_value=SCR_TOP_THRESHOLD;
 181   5              }
 182   4              else if(SCR1_value<SCR_BOTTOM_THRESHOLD)       //Ñ­»·¿ØÖÆ£¬ÁÁ¶È×îÁÁÊ±ÔÙÖð½¥±ä°µ
 183   4              {
 184   5                SCR1_status=1;
 185   5                SCR1_value=SCR_BOTTOM_THRESHOLD;
 186   5              }
 187   4              if(SCR1_status)
 188   4                SCR1_value++;
 189   4              else
 190   4                SCR1_value--;
 191   4              if(SCR1_value%10==0)                           //µ÷¹â¹ý³ÌÖÐÊµÊ±·´À¡ÁÁ¶ÈÖµ
 192   4                SCR1_Flag=1;
 193   4            }
 194   3            
 195   3            if(SCR2_control_flag)                            //¹è¿Ø¿Ú2
 196   3            {
 197   4              if(SCR2_value>SCR_TOP_THRESHOLD)
 198   4              {
 199   5                SCR2_status=0;
 200   5                SCR2_value=SCR_TOP_THRESHOLD;
 201   5              }
 202   4              else if(SCR2_value<SCR_BOTTOM_THRESHOLD)       //Ñ­»·¿ØÖÆ£¬ÁÁ¶È×îÁÁÊ±ÔÙÖð½¥±ä°µ
 203   4              {
 204   5                SCR2_status=1;
 205   5                SCR2_value=SCR_BOTTOM_THRESHOLD;
 206   5              }
 207   4              
 208   4              if(SCR2_status)
 209   4                SCR2_value++;
 210   4              else
 211   4                SCR2_value--;
 212   4              if(SCR2_value%10==0)
 213   4                SCR2_Flag=1;
 214   4            }
 215   3            
 216   3            SCR_control_counter=0;
 217   3          }
 218   2        }
 219   1      
 220   1      /*----------------°´¼üµÄ¶ÁÈ¡£¬¶Ì°´¡¢³¤°´¡¢Í£Ö¹¿ØÖÆµÄÅÐ¶Ï£¬Ïû¶¶-------------*/ 
 221   1        if(Key_Cheak)       //¿ª¹ØÊ¹83±àÂëÆ÷²úÉúÂö³å´¥·¢ÖÐ¶Ï0--keycheak=1;
 222   1        {
 223   2          Key_Counter++;
 224   2      //1   
 225   2          if(Key_Counter==KEY_SHAKE_TIME)       //¿ª¹ØÏû¶¶Ê±¼äKEY_SHAKE_TIME =500,Ïàµ±ÓÚ50ms
 226   2                      //ÑÓ³Ù50msºó¶ÁÈ¡°´¼üµÄÖµ£¬·ÀÖ¹°´¼ü¶¶¶¯Ôì³ÉÈ¡Öµ´íÎó£¬°´¼üÇ°Ïû¶¶
 227   2          {       
 228   3            if(!INT0)   //Èô°´¼ü»¹ÔÚ°´ÏÂ    //ÅÐ¶ÏÍâ²¿ÖÐ¶Ï0µÄP32¿Ú°´¼üÊÇ·ñ»¹ÔÚ°´ÏÂ
 229   3            {
 230   4              if(A0)      //A0=P2^4;8-3±àÂëÆ÷×îµÍÎ»
 231   4                Key_Value=Key_Value|0x01;     
 232   4              if(A1)      //A1=P2^5; 8-3±àÂëÆ÷µÚ¶þÎ»
 233   4                Key_Value=Key_Value|0x02;   
 234   4              if(A2)      //A2=P2^6; 8-3±àÂëÆ÷×î¸ßÎ»
 235   4                Key_Value=Key_Value|0x04; 
 236   4                
 237   4              Key_Value=~Key_Value;          //74148µÄ±àÂëÎª·´Âë
 238   4              Key_Value=Key_Value&0x07;    //µÃµ½°´¼ü°´ÏÂ74148µÄ¶Ë¿ÚÊý
 239   4            }
 240   3            else    //ÈôÒÑËÉ¿ª£¬ÔòÈÏÎªÎó²Ù×÷
C51 COMPILER V9.50a   CONTROL                                                              07/17/2017 17:31:02 PAGE 5   

 241   3            {
 242   4              Key_Cheak=0;
 243   4              Key_Counter=0;
 244   4              Key_Shake=1;
 245   4            }
 246   3          }
 247   2      //2   
 248   2          if(Key_Counter>KEY_SHAKE_TIME)               //°´¼üÇ°Ïû¶¶Ö®ºó¿ªÊ¼ÅÐ¶Ï°´¼üÊÇ³¤°´»¹ÊÇ¶Ì°´
 249   2          {
 250   3            if(INT0)             //°´¼üËÉ¿ª          //¶Ì°´
 251   3            {
 252   4              Key_Value=Key_Value|0x80;
 253   4              Key_Shake=1;
 254   4              Key_Cheak=0;
 255   4              Key_Counter=0;
 256   4              Key_Flag=1;
 257   4            }
 258   3            else if(Key_Counter==KEY_BOUNDARY_TIME) //³¤°´
 259   3            {                   //KEY_BOUNDARY_TIMEÏàµ±ÓÚ0.5S³¤¶Ì°´½çÏÞÖµ
 260   4              Key_Value=Key_Value|0x40;
 261   4              Long_Cheak=1;
 262   4              Key_Cheak=0;
 263   4              Key_Counter=0;
 264   4              Key_Flag=1;
 265   4            }
 266   3          }
 267   2        }
 268   1        
 269   1        if(Long_Cheak)                                       //³¤°´Í£Ö¹¿ØÖÆ¼ì²â
 270   1        {
 271   2          if(INT0)                //°´¼üËÉ¿ª
 272   2          {
 273   3            Key_Value=Key_Value|0x20;
 274   3            Key_Shake=1;
 275   3            Long_Cheak=0;
 276   3            Key_Flag=1;
 277   3          }
 278   2        }
 279   1        
 280   1        if(Key_Shake)                         //°´¼üºóÏû¶¶£¬·ÀÖ¹ËÉ¿ª°´¼üµÄ¶¶¶¯Ôì³É´íÎóµÄ°´¼üÊäÈëÏìÓ¦
 281   1        {
 282   2          Key_Counter++;
 283   2          if(Key_Counter==KEY_SHAKE_TIME)     //¿ª¹ØÏû¶¶Ê±¼ä£¬500*100us=50ms
 284   2          {
 285   3            Key_Shake=0;
 286   3            Key_Counter=0;
 287   3            IE0=0;                                  //¿ªÍâ²¿ÖÐ¶ÏÖ®Ç°£¬ÏÈÇå¿ÕÒ»ÏÂÖÐ¶Ï±êÖ¾Î»
 288   3            EX0=1;                                           //¿ªÍâ²¿ÖÐ¶Ï
 289   3          }
 290   2        }
 291   1      
 292   1      
 293   1      /*--------------------Êý×ÖÁ¿Àà´«¸ÐÆ÷ÑÓ³Ù¿ØÖÆ---------------------*/
 294   1        if(Sound_Delay1_Flag)
 295   1        {
 296   2          Sound_Sensor_Counter++;
 297   2          if(Sound_Sensor_Counter==10000)         //1S
 298   2          {
 299   3            Sound_Sensor_Counter=0;
 300   3            Sound_Sensor_Counter1++;
 301   3            if(Sound_Sensor_Counter1==Sound_Delay[0])
 302   3            {
C51 COMPILER V9.50a   CONTROL                                                              07/17/2017 17:31:02 PAGE 6   

 303   4              Sound_Sensor_Counter=0;
 304   4              Sound_Sensor_Counter1=0;
 305   4              Sound_Pack_Flag=1;        //¼ÆÊ±Ê±¼äµ½£¬ÖÃ±¨ÎÄ×é×°±êÖ¾Î»
 306   4              Sound_Check_Flag=1;       //ÖÃÉùÒô´«¸ÐÆ÷»Ö¸´¼ì²â±êÖ¾Î»
 307   4              Sound_Pack2_Flag=1;       //ÑÓÊ±ºó×é×°µÄ±¨ÎÄ±êÖ¾Î»        
 308   4              Sound_Delay1_Flag=0;
 309   4            }
 310   3          }
 311   2        }
 312   1      
 313   1      /*-------------------ÎÂÊª¶È²âÊÔ¼ä¸ôÊ±¼ä¿ØÖÆ--------------------*/
 314   1        Sensor_T_H_Counter++;
 315   1        if(Sensor_T_H_Counter==20000)                            //Ã¿¸ô2s²âÁ¿Ò»´ÎÎÂ¶ÈºÍÊª¶È
 316   1        {
 317   2          Sensor_T_H_Flag=1;
 318   2          Sensor_T_H_Counter=0;
 319   2          Lux_Start_Flag=1;                                      //Ã¿¸ô2sÆô¶¯Ò»´Î¹âÕÕ¶ÈÖµ
 320   2        }
 321   1        
 322   1      /*-------------------¹âÕÕ²âÊÔ¼ä¸ôÊ±¼ä¿ØÖÆ--------------------*/   
 323   1        if(Lux_Flag)                                   //Æô¶¯¹âÕÕ¶È´«¸ÐÆ÷ºó£¬200msºó¿ªÊ¼¶ÁÈ¡¹âÕÕ¶ÈÖµ
 324   1        {
 325   2          Lux_Counter++;
 326   2          if(Lux_Counter==2000)
 327   2          {
 328   3            Lux_Read_Flag=1;
 329   3            Lux_Counter=0;
 330   3            Lux_Flag=0;
 331   3          }
 332   2        }
 333   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1063    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     19    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      8    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
