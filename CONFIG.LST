C51 COMPILER V9.50a   CONFIG                                                               07/17/2017 17:31:02 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE CONFIG
OBJECT MODULE PLACED IN CONFIG.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE CONFIG.c LARGE OPTIMIZE(7,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*****************************************************************
   2                                     CONFIG.C  file
   3          
   4          Ö÷Òª¹¦ÄÜ£ºÖ÷Ä£¿é¿ÉÖØÅäÖÃ¹¦ÄÜÊµÏÖ
   5          
   6          ´´½¨Ê±¼ä£º2015.10.31
   7          *****************************************************************/
   8          /*--------------------------------------------------------------*/
   9          /*-----------------------------Í·ÎÄ¼þ---------------------------*/
  10          /*--------------------------------------------------------------*/
  11          #include "CONFIG.h"
  12          #include <intrins.h>
  13          #include <STC89C5xRC.h>
  14          
  15          unsigned char bdata Temp1;          //´æ·Åµ½Î»Ñ°Ö·Çø
  16          unsigned char bdata Temp2;
  17          
  18          sbit Temp1_0=Temp1^0;
  19          sbit Temp1_1=Temp1^1;
  20          sbit Temp1_2=Temp1^2;
  21          sbit Temp1_3=Temp1^3;
  22          sbit Temp1_4=Temp1^4;
  23          sbit Temp1_5=Temp1^5;
  24          sbit Temp1_6=Temp1^6;
  25          sbit Temp1_7=Temp1^7;
  26          sbit Temp2_0=Temp2^0;
  27          sbit Temp2_1=Temp2^1;
  28          sbit Temp2_2=Temp2^2;
  29          sbit Temp2_3=Temp2^3;
  30          sbit Temp2_4=Temp2^4;
  31          sbit Temp2_5=Temp2^5;
  32          sbit Temp2_6=Temp2^6;
  33          sbit Temp2_7=Temp2^7;
  34          
  35          unsigned char ID1,ID2;
  36          
  37          unsigned char ID_GP_Q[3];         //ÈºµØÖ·,IDµØÖ·£¬·Ö×é
  38          unsigned char Analog_Threshold[16];
  39          unsigned char Write_Cache[192];
  40          unsigned char Sound_Delay[4];               //½«¶¨Ê±Ê±¼äÁíÍâ´æ·ÅÆðÀ´£¬·ÀÖ¹ÑÓÊ±Ê±¼äÄÚ»º´æÇøÕ¼ÓÃ     
  41          bit Sound_Delay1_Flag;            //Ä¿±ê1µÄÑÓÊ±±êÖ¾Î»
  42          //  bit Sound_Delay2_Flag;
  43          //  bit Sound_Target3_Flag;
  44          //  bit Sound_Target4_Flag;
  45          bit  Sound_Check_Flag=1;          //ÉùÒô¼ì²â±êÖ¾Î»£¬³õÊ¼»¯Îª1£¬¼ì²â½øÐÐ
  46          bit  Sound_Pack_Flag=0;           //¼ì²âµ½ÉùÒôºó£¬±¨ÎÄ×é×°±êÖ¾Î»
  47          bit  Sound_Pack2_Flag=0;          //ÑÓÊ±ºó×é×°µÄ±¨ÎÄ±êÖ¾Î»
  48          unsigned int Sound_Sensor_Counter=0;
  49          unsigned char Sound_Sensor_Counter1=0;
  50          
  51          
  52          bit Relay1_Alconfig_Flag,Relay2_Alconfig_Flag,Relay3_Alconfig_Flag,Relay4_Alconfig_Flag;
  53          bit Scr1_Alconfig_Flag;
  54          bit Scr2_Alconfig_Flag;
  55          /*--------------------------------------------------------------*/
C51 COMPILER V9.50a   CONFIG                                                               07/17/2017 17:31:02 PAGE 2   

  56          /*--------------------------³õÊ¼»¯³ÌÐò--------------------------*/
  57          /*--------------------------------------------------------------*/
  58          void init_config()
  59          {
  60   1        unsigned char i;
  61   1        
  62   1        i=rom_r(0x8000);                                     
  63   1        if(i!=0xAA)                       //ÅÐ¶ÏEEPROMÊÇ·ñÒÑ¾­ÅäÖÃ¹ý£¬Èç¹ûÅäÖÃ¹ý£¬0x8000µÄÖµÎª0xAA
  64   1        {
  65   2          rom_c(0x8000);                                   //Çå¿ÕµÚÒ»ÉÈÇø£¬×¼±¸Ð´ÈëÈ±Ê¡ÅäÖÃ   
  66   2          
  67   2          rom_w(0x8001,0);                                  //ÈºID    È±Ê¡Îª0
  68   2          rom_w(0x8002,5);                                 //Ä£¿éID  È±Ê¡Îª5
  69   2          rom_w(0x8003,0x00);                               //×éIDµÍ8Î»   È±Ê¡Îª0 
  70   2          rom_w(0x8004,0x00);                               //×éID¸ß8Î»   È±Ê¡Îª0 
  71   2          for(i=0;i<3;i++)                  //3Â·Ä£ÄâÁ¿ÉÏãÐÖµ  È±Ê¡0xFF
  72   2          {
  73   3            rom_w(0x8010+i,0xFF);
  74   3            i=i+1;
  75   3          }
  76   2          for(i=0;i<3;i++)                  //3Â·Ä£ÄâÁ¿ÏÂãÐÖµ È±Ê¡0x00
  77   2          {
  78   3            rom_w(0x8013+i,0x00);
  79   3            i=i+1;
  80   3          }                                 
  81   2          rom_w(0x8000,0xAA);                                //½«0x8000µÄÖµÐ´Îª0xAA£¬±êÖ¾µÚÒ»ÉÈÇøÒÑ¾­½øÐÐ¹ýÅäÖÃ
  82   2        } 
  83   1        for(i=0;i<3;i++)        /*½«EEPROMÖ®Ç°ÅäÖÃ¶ÁÈëµ½RAMÖÐ*/         
  84   1        {
  85   2          ID_GP_Q[i]=rom_r(0x8001+i);
  86   2        }
  87   1        for(i=0;i<6;i++)        /*½«EEPROMÖ®Ç°ÅäÖÃ¶ÁÈëµ½RAMÖÐ*/
  88   1        {
  89   2          Analog_Threshold[i]=rom_r(0x8010+i);
  90   2        } 
  91   1        id_chang();                       //½«±¾Ä£¿éµÄID²ð·Ö×ª»»
  92   1      }
  93          /*--------------------------------------------------------------*/
  94          /*--------------------------ID×ª»»³ÌÐò--------------------------*/
  95          /*------³ÌÐò¹¦ÄÜ£º½«Ò»Ö¡Êý¾ÝÏÈ·­×ª£¬È»ºóÔÚ½«Ò»Ö¡Êý¾ÝÀ©Õ¹³ÉÁ½³É--*/
  96          /*--------------------------------------------------------------*/
  97          void id_chang()
  98          {
  99   1        Temp1=ID;
 100   1        Temp2_0=Temp1_7;          //¸ßµÍÎ»×ª»»
 101   1        Temp2_1=Temp1_6;
 102   1        Temp2_2=Temp1_5;
 103   1        Temp2_3=Temp1_4;
 104   1        Temp2_4=Temp1_3;
 105   1        Temp2_5=Temp1_2;
 106   1        Temp2_6=Temp1_1;
 107   1        Temp2_7=Temp1_0;
 108   1        Temp1=Temp2;
 109   1        Temp2=0xFF;
 110   1        Temp2_7=Temp1_7;          
 111   1        Temp2_5=Temp1_6;
 112   1        Temp2_3=Temp1_5;
 113   1        Temp2_1=Temp1_4;
 114   1        ID2=Temp2;              //ID2ÎªÈ¡³öµÄ¸ß4Î»
 115   1        Temp2=0xFF;
 116   1        Temp2_7=Temp1_3;
 117   1        Temp2_5=Temp1_2;
C51 COMPILER V9.50a   CONFIG                                                               07/17/2017 17:31:02 PAGE 3   

 118   1        Temp2_3=Temp1_1;
 119   1        Temp2_1=Temp1_0;
 120   1        ID1=Temp2;              //ID1ÎªÈ¡³öµÄµÍ4Î»
 121   1      }
 122          
 123          /*--------------------------------------------------------------*/
 124          /*--------------------------²Á³ýÉÈÇø³ÌÐò-----------------------*/
 125          /*--------------------------------------------------------------*/
 126          void rom_c(unsigned int addr)                         //EEPROMÐ´ÈëÈÎºÎÊý¾ÝÖ®Ç°±ØÐë½«Õû¸öÉÈÇø²Á³ý£¬addr=Ä³Ò
             -»ÉÈÇøÊ×µØÖ·
 127          { 
 128   1        ISP_CONTR = 0x80;                                 //´ò¿ªIAP¹¦ÄÜ£¬ÔÊÐí±à³Ì¸Ä±äEEPROM£¬ÉèÖÃ±à³Ì²Ù×÷µÈ´ýÊ±¼ä
 129   1        ISP_CMD   = 0x03;                             //¶ÔEEPROMÉÈÇø½øÐÐ²Á³ýÃüÁî 
 130   1        ISP_ADDRL = addr;                                 //ISP/IAP²Ù×÷µØÖ·µÍ8Î»  
 131   1        ISP_ADDRH = addr>>8;                              //ISP/IAP²Ù×÷µØÖ·¸ß8Î»     
 132   1        ISP_TRIG = 0x46;          
 133   1        ISP_TRIG = 0xB9;                                  //ÏÈÐ´Èë0x46£¬ÔÙÐ´Èë0xB9£¬´¥·¢ISP/IAPÃüÁîÉúÐ§ 
 134   1        _nop_();
 135   1        ISP_CONTR=0;                                      //¹Ø±ÕISP/IAP
 136   1        ISP_CMD=0;                                        //´ý»úÄ£Ê½£¬ÎÞISP²Ù×÷
 137   1        ISP_TRIG=0;                                       //Çå¿ÕÓëISPÓÐ¹ØµÄÌØÊâ¹¦ÄÜ¼Ä´æÆ÷
 138   1      }
 139          
 140          /*--------------------------------------------------------------*/
 141          /*--------------------ÏòEEPROMÖÐÐ´ÈëÒ»¸ö×Ö½Ú-------------------*/
 142          /*--------------------------------------------------------------*/
 143          void rom_w(unsigned int addr,unsigned char dat)    //addr=ÉÈÇøµ¥ÔªµØÖ·£¬dat=´ýÐ´ÈëµÄÊý¾Ý
 144          {
 145   1        ISP_CONTR = 0x80;                              //´ò¿ªIAP¹¦ÄÜ£¬ÔÊÐí±à³Ì¸Ä±äEEPROM£¬ÉèÖÃ±à³Ì²Ù×÷µÈ´ýÊ±¼ä
 146   1        ISP_CMD   = 0x02;                                //¶ÔEEPROM½øÐÐ×Ö½Ú±à³Ì   
 147   1        ISP_ADDRL = addr;        
 148   1        ISP_ADDRH = addr>>8;      
 149   1        ISP_DATA  = dat;          
 150   1        ISP_TRIG = 0x46;          
 151   1        ISP_TRIG = 0xB9;          
 152   1        _nop_();
 153   1        ISP_CONTR=0;                                      //¹Ø±ÕISP/IAP
 154   1        ISP_CMD=0;                                        //´ý»úÄ£Ê½£¬ÎÞISP²Ù×÷
 155   1        ISP_TRIG=0;                                       //Çå¿ÕÓëISPÓÐ¹ØµÄÌØÊâ¹¦ÄÜ¼Ä´æÆ÷
 156   1      }
 157          /*--------------------------------------------------------------*/
 158          /*--------------------´ÓEEPROMÖÐ¶Á³öÒ»¸ö×Ö½Ú-------------------*/
 159          /*--------------------------------------------------------------*/
 160          unsigned char rom_r(unsigned int addr)              //addr=ÉÈÇøµ¥ÔªµØÖ·
 161          {   
 162   1        unsigned char dat;
 163   1        ISP_CONTR = 0x80;     
 164   1        ISP_CMD   = 0x01;                               //¶ÔEEPROM½øÐÐ×Ö½Ú¶Á²Ù×÷
 165   1        ISP_ADDRL = addr;         
 166   1        ISP_ADDRH = addr>>8;      
 167   1        ISP_TRIG = 0x46;          
 168   1        ISP_TRIG = 0xB9;          
 169   1        _nop_();
 170   1        dat = ISP_DATA;       
 171   1        ISP_CONTR=0;                                      //¹Ø±ÕISP/IAP
 172   1        ISP_CMD=0;                                        //´ý»úÄ£Ê½£¬ÎÞISP²Ù×÷
 173   1        ISP_TRIG=0;                                       //Çå¿ÕÓëISPÓÐ¹ØµÄÌØÊâ¹¦ÄÜ¼Ä´æÆ÷          
 174   1        return dat;
 175   1      }
 176          
 177          /*--------------------------------------------------------------*/
 178          /*-------------------½«ÅäÖÃ²ÎÊý±£´æµ½EEPROMÖÐ-------------------*/
C51 COMPILER V9.50a   CONFIG                                                               07/17/2017 17:31:02 PAGE 4   

 179          /*--------------------------------------------------------------*/
 180          void id_Gp_Q_save()                   //ÈºID,Ä£¿éID¼°·Ö×éÖØÐÂÅäÖÃ
 181          {
 182   1        unsigned char i;
 183   1        rom_c(0x8000);
 184   1        for(i=0;i<3;i++)
 185   1        {
 186   2          rom_w(0x8001+i,ID_GP_Q[i]);
 187   2        }
 188   1        for(i=0;i<16;i++)
 189   1        {
 190   2          rom_w(0x8010+i,Analog_Threshold[i]);
 191   2        }
 192   1        rom_w(0x8000,0xAA);
 193   1        id_chang();                     //ÖØÐÂÅäÖÃºóÔÙ´Î²ð·Ö×ª»»£¬¸üÐÂ»º´æÔÚRamµÄÊý¾Ý
 194   1      }
 195          void delete_all_e2prom()
 196          {
 197   1        unsigned char i;
 198   1        for(i=0;i<30;i++)
 199   1        {
 200   2          rom_c(0x8200+(i<<9));
 201   2        }
 202   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    533    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    220       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     10    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
