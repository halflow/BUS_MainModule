C51 COMPILER V9.00   KEY                                                                   06/18/2014 16:32:55 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN KEY.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil 4\C51\BIN\C51.EXE KEY.c LARGE OPTIMIZE(7,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*****************************************************************
   2                                       KEY.C  file
   3          
   4          Ö÷Òª¹¦ÄÜ£º¸ºÔð¶Ô¿ª¹ØÄ£¿é¿ª¹Ø¶¯×÷µÄÏìÓ¦£¬Çø·Ö¶Ì°´¡¢³¤°´¼°Í£Ö¹¶¯×÷²Ù
   5                    ×÷£¬ÖÃÎ»ÏàÓ¦±êÖ¾Î»
   6          
   7          ´´½¨Ê±¼ä£º2013.7.30
   8          *****************************************************************/
   9          
  10          /*--------------------------------------------------------------*/
  11          /*---------------------------Í·ÎÄ¼þ-----------------------------*/
  12          /*--------------------------------------------------------------*/
  13          #include <STC89C5xRC.h>
  14          #include "KEY.h"
  15          #include "SCR.h"
  16          #include "Sensor_T_H.h"
  17          #include "LUX_LIGHT.h"
  18          #include "CONFIG.h"
  19          /*--------------------------------------------------------------*/
  20          
  21          
  22          
  23          /*--------------------------------------------------------------*/
  24          /*-------------------------È«¾Ö±äÁ¿¶¨Òå-------------------------*/
  25          /*--------------------------------------------------------------*/
  26          bit  Key_Cheak;                                      //±êÖ¾¼ÆÊýÆ÷2µÄÓÃÍ¾£¬°´¼ü¼ì²â
  27          unsigned int Key_Counter;                            //¿ª¹Ø°´ÏÂµÄÊ±¼ä¼ÆÊýÆ÷
  28          bit  Long_Cheak;                                     //ÓÃÓÚ³¤°´Ê±¼ì²âºÏÊÊÍ£Ö¹¿ØÖÆ
  29          bit  Key_Shake;
  30          unsigned char Key_Value;
  31          bit  Key_Flag;
  32          
  33          
  34          /*--------------------------------------------------------------*/
  35          /*--------------------------¿ª¹Ø³õÊ¼»¯--------------------------*/
  36          /*--------------------------------------------------------------*/
  37          void init_key()
  38          {
  39   1              A0=1;                                              //A0¡¢A1¡¢A2Îª74hc148ÊäÈë¶Ë¿Ú£¬ÐèÒªÐ´Èë1
  40   1              A1=1;
  41   1              A2=1;
  42   1              Key_Cheak=0;                                       //°´¼ü¼ì²â³õÊ¼»¯ÎªÁã
  43   1              Key_Counter=0x0000;                                //¼ÆÊýÆ÷³õÊ¼»¯³ÉÁã
  44   1              Long_Cheak=0;
  45   1              Key_Shake=0;
  46   1              Key_Value=0;
  47   1              Key_Flag=0;
  48   1      
  49   1              
  50   1              T2CON=0x00;T2MOD=0x00;                             //ÉèÖÃ¶¨Ê±Æ÷2Îª16Î»×Ô¶¯ÖØ×°ÔØÄ£Ê½
  51   1              RCAP2H=0xFF;RCAP2L=0x0A;                           //ÉèÖÃ¶¨Ê±Æ÷µÄ¶¨Ê±Ê±¼äÎª100us
  52   1              TH2=0xFF;TL2=0x0A;
  53   1              TR2=1;                                             //Æô¶¯¶¨Ê±Æ÷T2
  54   1              ET2=1;                                             //ÔÊÐí¶¨Ê±Æ÷T2ÖÐ¶Ï
  55   1      //ÍâÖÐ¶Ï1³õÊ¼»¯
C51 COMPILER V9.00   KEY                                                                   06/18/2014 16:32:55 PAGE 2   

  56   1              IE0=0;                                             //¿ªÖÐ¶ÏÖ®Ç°ÏÈÇå¿ÕÒ»ÏÂÖÐ¶Ï±êÖ¾Î»
  57   1              EX0=1;                                             //ÔÊÐíÍâ²¿ÖÐ¶Ï0²úÉúÖÐ¶Ï
  58   1              IT0=1;                                             //Íâ²¿ÖÐ¶Ï0ÎªÌøÑØ´¥·¢·½Ê½
  59   1      
  60   1      }
  61          /*--------------------------------------------------------------*/
  62          
  63          /*--------------------------------------------------------------*/
  64          /*-------------------------Íâ²¿ÖÐ¶Ï0³ÌÐò------------------------*/
  65          /*--------------------------------------------------------------*/
  66          void interrupt_INT0() interrupt 0                    //Íâ²¿ÖÐ¶Ï0µÄÖÐ¶ÏºÅÎª0
  67          {
  68   1              Key_Cheak=1;                       //¿ªÆô°´¼ü¼ì²â£¬¾ßÌå¼ì²âºÍ´¦Àí¹ý³ÌÔÚ¶¨Ê±Æ÷2ÖÐ¶Ï³ÌÐòÖÐÍê³É
  69   1              Key_Counter=0x0000;
  70   1              Key_Value=0;
  71   1              EX0=0;                                     //¹Ø±ÕÍâ²¿ÖÐ¶Ï0£¬·ÀÖ¹°´¼ü¶¶¶¯Ôì³ÉÖØ¸´²úÉúÖÐ¶Ï
  72   1              IE0=0;                       //                //Îª±£ÏÕÆð¼û£¬ÔÙ´ÎÇå¿ÕÍâ²¿ÖÐ¶ÏÇëÇóÎ»
  73   1      }
  74          /*--------------------------------------------------------------*/
  75          
  76          /*--------------------------------------------------------------*/
  77          /*------------------------¶¨Ê±Æ÷2ÖÐ¶Ï³ÌÐò-----------------------*/
  78          /*--------------------------------------------------------------*/
  79          void interrupt_timer2() interrupt 5                    //¶¨Ê±Ê±¼äÎª100us
  80          {
  81   1              TF2=0;                         //Çå¿Õ¶¨Ê±Æ÷2µÄÖÐ¶ÏÇëÇó±êÖ¾Î»£¬T2µÄÖÐ¶ÏÇëÇó±êÖ¾Î»ÐèÒªÈí¼þÇåÁã
  82   1      
  83   1      /*-----------------------¿É¿Ø¹è´¥·¢¿ØÖÆÊä³ö³ÌÐò-------------------------*/      
  84   1              SCR_counter++;
  85   1              if(SCR_counter==SCR1_value)                             //¿É¿Ø¹èµÄÑÓÊ±µ¼Í¨Öµ
  86   1              {
  87   2                      SCR1=0;                                                         //´¥·¢SCR1¿ØÖÆµÆÅÝÁÁ
  88   2                      SCR1_timer=SCR1_value;                          //
  89   2              }
  90   1              if(SCR_counter==SCR2_value)                             //¿É¿Ø¹èµÄÑÓÊ±µ¼Í¨Öµ
  91   1              {
  92   2                      SCR2=0;                                                         //´¥·¢SCR2¿ØÖÆµÆÅÝÁÁ
  93   2                      SCR2_timer=SCR2_value;
  94   2              }
  95   1              if(SCR_counter==(SCR1_timer+SCR_TIGGER_TIME))          //Ê¹µ¼Í¨¸ßÂö³åÎ¬³Ö1ms
  96   1                      SCR1=1;                                                 
  97   1              if(SCR_counter==(SCR2_timer+SCR_TIGGER_TIME))
  98   1                      SCR2=1;
  99   1      /*---------------------------------------------------------------*/
 100   1              
 101   1      /*-----------------------¿É¿Ø¹èµ÷¹â¿ØÖÆÊä³ö³ÌÐò-------------------------*/      
 102   1              if(SCR1_control_flag||SCR2_control_flag)               //°´¼ü³¤°´Ê±¿É¿Ø¹èµÄ¿ØÖÆ
 103   1              {
 104   2                      SCR_control_counter++;                             //¿É¿Ø¹è¿ØÖÆ¼ÆÊýÆ÷¼Ó1
 105   2                      if(SCR_control_counter==SCR_CHANGE_RATE)//0.1s¿É¿Ø¹èÑÓÊ±µ¼Í¨ÖµÔö¼Ó»òÕß¼õÉÙ1´Î£¬³¤°´Ê±´Ó×îÁÁµ½×î°µÐèÒª7sÖ
             -Ó
 106   2                      {
 107   3                              if(SCR1_control_flag)                            //¹è¿Ø¿Ú1
 108   3                              {
 109   4                                      if(SCR1_value>SCR_TOP_THRESHOLD)             //Ñ­»·¿ØÖÆ£¬ÁÁ¶È×î°µÊ±ÔÙÖð½¥ÔöÁÁ
 110   4                                      {
 111   5                                              SCR1_status=0;
 112   5                                              SCR1_value=SCR_TOP_THRESHOLD;
 113   5                                      }
 114   4                                      else if(SCR1_value<SCR_BOTTOM_THRESHOLD)       //Ñ­»·¿ØÖÆ£¬ÁÁ¶È×îÁÁÊ±ÔÙÖð½¥±ä°µ
 115   4                                      {
 116   5                                              SCR1_status=1;
C51 COMPILER V9.00   KEY                                                                   06/18/2014 16:32:55 PAGE 3   

 117   5                                              SCR1_value=SCR_BOTTOM_THRESHOLD;
 118   5                                      }
 119   4                                      if(SCR1_status)
 120   4                                              SCR1_value++;
 121   4                                      else
 122   4                                              SCR1_value--;
 123   4                                      if(SCR1_value%10==0)                           //µ÷¹â¹ý³ÌÖÐÊµÊ±·´À¡ÁÁ¶ÈÖµ
 124   4                                              SCR1_Flag=1;
 125   4                              }
 126   3                              
 127   3                              if(SCR2_control_flag)                            //¹è¿Ø¿Ú2
 128   3                              {
 129   4                                      if(SCR2_value>SCR_TOP_THRESHOLD)
 130   4                                      {
 131   5                                              SCR2_status=0;
 132   5                                              SCR2_value=SCR_TOP_THRESHOLD;
 133   5                                      }
 134   4                                      else if(SCR2_value<SCR_BOTTOM_THRESHOLD)       //Ñ­»·¿ØÖÆ£¬ÁÁ¶È×îÁÁÊ±ÔÙÖð½¥±ä°µ
 135   4                                      {
 136   5                                              SCR2_status=1;
 137   5                                              SCR2_value=SCR_BOTTOM_THRESHOLD;
 138   5                                      }
 139   4                                      
 140   4                                      if(SCR2_status)
 141   4                                              SCR2_value++;
 142   4                                      else
 143   4                                              SCR2_value--;
 144   4                                      if(SCR2_value%10==0)
 145   4                                              SCR2_Flag=1;
 146   4                              }
 147   3                              
 148   3                              SCR_control_counter=0;
 149   3      
 150   3                      }
 151   2              }
 152   1      /*-----------------------------------------------------------*/
 153   1      
 154   1      /*--------°´¼üµÄ¶ÁÈ¡£¬¶Ì°´¡¢³¤°´¡¢Í£Ö¹¿ØÖÆµÄÅÐ¶Ï£¬Ïû¶¶-------*/ 
 155   1              if(Key_Cheak)                           //¿ª¹ØÊ¹83±àÂëÆ÷²úÉúÂö³å´¥·¢ÖÐ¶Ï1--keycheak=1;
 156   1              {
 157   2                      Key_Counter++;
 158   2      //1             
 159   2                      if(Key_Counter==KEY_SHAKE_TIME)                   //¿ª¹ØÏû¶¶Ê±¼äKEY_SHAKE_TIME =500,Ïàµ±ÓÚ50ms  
 160   2                                                                      //ÑÓ³Ù50msºó¶ÁÈ¡°´¼üµÄÖµ£¬·ÀÖ¹°´¼ü¶¶¶¯Ôì³ÉÈ¡Öµ´íÎó£¬°´¼üÇ°Ïû¶¶
 161   2                      {       
 162   3                              
 163   3                              if(!INT0)               //Èô°´¼ü»¹ÔÚ°´ÏÂ                //ÅÐ¶ÏÍâ²¿ÖÐ¶Ï0µÄP32¿Ú°´¼üÊÇ·ñ»¹ÔÚ°´ÏÂ
 164   3                              {
 165   4                                      //3¸öifÁ¬ÐøÅÐ¶Ï
 166   4                                      if(A0)                  //sbit A0=P2^4;8-3±àÂëÆ÷×îµÍÎ»
 167   4                                              Key_Value=Key_Value|0x01;                       
 168   4                                      if(A1)                  //sbit A1=P2^5; 8-3±àÂëÆ÷µÚ¶þÎ»
 169   4                                              Key_Value=Key_Value|0x02;               
 170   4                                      if(A2)                  //sbit A2=P2^6; 8-3±àÂëÆ÷×î¸ßÎ»
 171   4                                              Key_Value=Key_Value|0x04;       
 172   4                                              
 173   4                                      Key_Value=~Key_Value;          //74148µÄ±àÂëÎª·´Âë
 174   4                                      Key_Value=Key_Value&0x07;          //µÃµ½ÁË°´¼ü°´ÏÂ74148µÄ¶Ë¿ÚÊý
 175   4                              }
 176   3                              else            //ÈôÒÑËÉ¿ª£¬ÔòÈÏÎªÎó²Ù×÷
 177   3                              {
 178   4                                      Key_Cheak=0;
C51 COMPILER V9.00   KEY                                                                   06/18/2014 16:32:55 PAGE 4   

 179   4                                      Key_Counter=0;
 180   4                                      Key_Shake=1;
 181   4                              }
 182   3                      }
 183   2      //2             
 184   2                      if(Key_Counter>KEY_SHAKE_TIME)               //°´¼üÇ°Ïû¶¶Ö®ºó¿ªÊ¼ÅÐ¶Ï°´¼üÊÇ³¤°´»¹ÊÇ¶Ì°´
 185   2                      {
 186   3                              if(INT0)             //°´¼üËÉ¿ª          //¶Ì°´//
 187   3                              {
 188   4                                      Key_Value=Key_Value|0x80;
 189   4                                      Key_Shake=1;
 190   4                                      Key_Cheak=0;
 191   4                                      Key_Counter=0;
 192   4                                      Key_Flag=1;
 193   4                              }
 194   3                              else if(Key_Counter==KEY_BOUNDARY_TIME) //°´¼üÎ´ËÉ¿ª  //³¤°´
 195   3                              {                                                                               //KEY_BOUNDARY_TIMEÏàµ±ÓÚ0.5S³¤¶Ì°´½çÏÞÖµ
 196   4                                      Key_Value=Key_Value|0x40;
 197   4                                      Long_Cheak=1;
 198   4                                      Key_Cheak=0;
 199   4                                      Key_Counter=0;
 200   4                                      Key_Flag=1;
 201   4                              }
 202   3                      }
 203   2              }
 204   1              
 205   1              if(Long_Cheak)                                       //Í£Ö¹¿ØÖÆ¼ì²â
 206   1              {
 207   2                      if(INT0)                                                                //°´¼üËÉ¿ª
 208   2                      {
 209   3                              Key_Value=Key_Value|0x20;
 210   3                              Key_Shake=1;
 211   3                              Long_Cheak=0;
 212   3                              Key_Flag=1;
 213   3                      }
 214   2              }
 215   1              
 216   1              if(Key_Shake)                         //°´¼üºóÏû¶¶£¬·ÀÖ¹ËÉ¿ª°´¼üµÄ¶¶¶¯Ôì³É´íÎóµÄ°´¼üÊäÈëÏìÓ¦
 217   1              {
 218   2                      Key_Counter++;
 219   2                      if(Key_Counter==KEY_SHAKE_TIME)                 //¿ª¹ØÏû¶¶Ê±¼ä£¬500*100us=50ms
 220   2                      {
 221   3                              Key_Shake=0;
 222   3                              Key_Counter=0;
 223   3                              IE0=0;            //ÍâÖÐ¶Ï0µÄÇëÇó±êÖ¾Î»          //¿ªÍâ²¿ÖÐ¶ÏÖ®Ç°£¬ÏÈÇå¿ÕÒ»ÏÂÖÐ¶Ï±êÖ¾Î»
 224   3                              EX0=1;                                           //¿ªÍâ²¿ÖÐ¶Ï
 225   3                      }
 226   2              }
 227   1      /*-------------------------------------------------------------*/
 228   1      
 229   1      /*--------------------¿ª¹ØÀà´«¸ÐÆ÷ÑÓ³Ù¿ØÖÆ---------------------*/       
 230   1              if(Sound_Sensor_Flag2)
 231   1              {
 232   2                      Sound_Sensor_Counter++;
 233   2                      if(Sound_Sensor_Counter==10000)
 234   2                      {
 235   3                              Sound_Sensor_Counter=0;
 236   3                              Sound_Sensor_Counter1++;
 237   3                              if(Sound_Sensor_Counter1==Switch_Sensor_Config[2])
 238   3                              {
 239   4                                      Sound_Sensor_Counter=0;
 240   4                                      Sound_Sensor_Counter1=0;
C51 COMPILER V9.00   KEY                                                                   06/18/2014 16:32:55 PAGE 5   

 241   4                                      Sound_Sensor_Flag=1;
 242   4                                      Sound_Sensor_Flag1=1;
 243   4                                      Sound_Sensor_Flag2=0;
 244   4                              }
 245   3                      }
 246   2              }
 247   1      
 248   1      /*-------------------ÎÂÊª¶È²âÊÔ¼ä¸ôÊ±¼ä¿ØÖÆ--------------------*/
 249   1              Sensor_T_H_Counter++;
 250   1              if(Sensor_T_H_Counter==20000)                            //Ã¿¸ô2s²âÁ¿Ò»´ÎÎÂ¶ÈºÍÊª¶È
 251   1              {
 252   2                      Sensor_T_H_Flag=1;
 253   2                      Sensor_T_H_Counter=0;
 254   2                      Lux_Start_Flag=1;                                      //Ã¿¸ô2s²âÁ¿Ò»´Î¹âÕÕ¶ÈÖµ
 255   2              }
 256   1      /*-------------------¹âÕÕ²âÊÔ¼ä¸ôÊ±¼ä¿ØÖÆ--------------------*/         
 257   1              if(Lux_Flag)                                   //Æô¶¯¹âÕÕ¶È´«¸ÐÆ÷ºó£¬200msºó¿ªÊ¼¶ÁÈ¡¹âÕÕ¶ÈÖµ
 258   1              {
 259   2                      Lux_Counter++;
 260   2                      if(Lux_Counter==2000)
 261   2                      {
 262   3                              Lux_Read_Flag=1;
 263   3                              Lux_Counter=0;
 264   3                              Lux_Flag=0;
 265   3                      }
 266   2              }
 267   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    749    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
